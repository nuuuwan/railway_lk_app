{"version":3,"sources":["core/TrainList.js","core/StopList.js","core/SearchEngine.js","stateful/molecules/StopListView.js","nonstate/atoms/TrainNameView.js","stateful/molecules/TrainInfoView.js","stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["TrainList","WWW","tsv","trainList","map","d","trainNo","name","StopList","url","stopList","stationName","timeArrive","parseInt","timeDepart","getTimeCurrent","TimeX","getUnixTime","SearchEngine","filterText","get","Promise","all","a","stopListList","dTrainList","i","getCurrentStops","stopLastDepart","stopNextArrive","Object","assign","filter","train","includes","sort","trainA","trainB","timeCurrent","reduce","stop","iStop","stop1","stop2","undefined","CIRCLE_STATION_FILL","TEXT_STATION_STROKE","TEXT_STATION_TEXT_ANCHOR","STATION_WIDTH_GAP","TimeView","t","h","m","String","padStart","Line","x","y","width","color","x1","y1","x2","y2","fill","stroke","strokeWidth","Dotted","strokeDasharray","TrainView","cx","cy","r","strokeOpacity","StationView","CIRCLE_STATION_RADIUS","textAnchor","fontWeight","StopListView","length","SVG_HEIGHT","keyPrefix","stationLastDepart","stationNextArrive","dTime","dTrain","xTrain","height","slice","TrainNameView","Box","Typography","variant","TrainInfoView","details","TableRow","TableCell","HomePage","props","state","trainInfoList","this","interval","setInterval","getTrainListExtended","setState","time","Date","now","bind","clearInterval","tableKey","sx","flexGrow","AppBar","position","Toolbar","TableContainer","component","Paper","Table","minWidth","TableBody","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50692c18.chunk.js","sourcesContent":["import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nexport default class TrainList {\n  static async get() {\n    const url = \"/railway_lk_app/data/railway_lk.train_list.tsv\";\n    const trainList = await WWW.tsv(url);\n    return trainList.map(function (d) {\n      return {\n        trainNo: d[\"train_no\"],\n        name: d[\"name\"],\n      };\n    });\n  }\n}\n","import { WWW } from \"@nuuuwan/utils-js-dev\";\n\nexport default class StopList {\n  static async get(trainNo) {\n    const url = `/railway_lk_app/data/railway_lk.train.${trainNo}.stop_list.tsv`;\n    const stopList = await WWW.tsv(url);\n    return stopList.map(function (d) {\n      return {\n        stationName: d[\"station_name\"],\n        timeArrive: parseInt(d[\"time_arrive\"]),\n        timeDepart: parseInt(d[\"time_depart\"]),\n      };\n    });\n  }\n}\n","import { TimeX } from \"@nuuuwan/utils-js-dev\";\nimport TrainList from \"./TrainList.js\";\nimport StopList from \"./StopList.js\";\n\nexport function getTimeCurrent() {\n  return (TimeX.getUnixTime() + 5.5 * 3600) % 86400;\n}\n\nexport default class SearchEngine {\n  static async getTrainListExtended(filterText) {\n    const trainList = await TrainList.get();\n    const stopListList = await Promise.all(\n      trainList.map(async function (d) {\n        return await StopList.get(d.trainNo);\n      })\n    );\n\n    return trainList\n      .map(function (dTrainList, i) {\n        const stopList = stopListList[i];\n        const [stopLastDepart, stopNextArrive] =\n          SearchEngine.getCurrentStops(stopList);\n\n        return Object.assign({}, dTrainList, {\n          stopList,\n          stopLastDepart,\n          stopNextArrive,\n        });\n      })\n      .filter(function (train) {\n        return (\n          train.stopLastDepart &&\n          train.stopNextArrive &&\n          train.stopNextArrive.stationName.includes(filterText)\n        );\n      })\n      .sort(function (trainA, trainB) {\n        return (\n          trainA.stopNextArrive.timeDepart - trainB.stopNextArrive.timeDepart\n        );\n      });\n  }\n\n  static getCurrentStops(stopList) {\n    const timeCurrent = getTimeCurrent();\n    return stopList.reduce(\n      function ([stopLastDepart, stopNextArrive], stop, iStop) {\n        if (iStop > 0) {\n          const stop1 = stopList[iStop - 1];\n          const stop2 = stopList[iStop];\n          if (\n            stop1.timeArrive <= timeCurrent + 60 &&\n            stop2.timeDepart >= timeCurrent\n          ) {\n            return [stop1, stop2];\n          }\n        }\n        return [stopLastDepart, stopNextArrive];\n      },\n      [undefined, undefined]\n    );\n  }\n}\n","import SearchEngine, { getTimeCurrent } from \"../../core/SearchEngine.js\";\n\nconst [SVG_WIDTH, SVG_HEIGHT] = [1000, 100];\nconst CIRCLE_STATION_RADIUS = 6;\nconst CIRCLE_STATION_FILL = \"white\";\nconst CIRCLE_STATION_STROKE_WIDTH = 3;\nconst PADDING_WIDTH = 30;\nconst TEXT_STATION_STROKE = \"black\";\nconst TEXT_STATION_TEXT_ANCHOR = \"middle\";\nconst STATION_WIDTH_GAP = 300;\nconst LINE_STROKE_WIDTH = 4;\nconst DOT_GAP = 5;\nconst TEXT_STATION_FONT_WEIGHT = \"bold\";\nconst CIRCLE_TRAIN_STROKE = \"black\";\nconst CIRCLE_TRAIN_STROKE_OPACITY = 0.5;\n\nfunction TimeView({ t }) {\n  if (!t) {\n    return \"\";\n  }\n  const h = parseInt(t / 3600);\n  const m = parseInt(t / 60) % 60;\n  return `${String(h).padStart(2, \"0\")}:${String(m).padStart(2, \"0\")}`;\n}\n\nfunction Line({ x, y, width, color }) {\n  return (\n    <line\n      x1={x}\n      y1={y}\n      x2={x + width}\n      y2={y}\n      fill={null}\n      stroke={color}\n      strokeWidth={LINE_STROKE_WIDTH}\n    />\n  );\n}\n\nfunction Dotted({ x, y, width, color }) {\n  return (\n    <line\n      x1={x}\n      y1={y}\n      x2={x + width}\n      y2={y}\n      fill={null}\n      stroke={color}\n      strokeWidth={LINE_STROKE_WIDTH}\n      strokeDasharray={`${DOT_GAP},${DOT_GAP}`}\n    />\n  );\n}\n\nfunction TrainView({ x, y }) {\n  return (\n    <g>\n      <circle\n        cx={x}\n        cy={y}\n        r={CIRCLE_STATION_RADIUS}\n        fill={CIRCLE_STATION_FILL}\n        stroke={CIRCLE_TRAIN_STROKE}\n        strokeWidth={CIRCLE_STATION_STROKE_WIDTH}\n        strokeOpacity={CIRCLE_TRAIN_STROKE_OPACITY}\n      />\n    </g>\n  );\n}\n\nfunction StationView({ x, y, stop, color }) {\n  const { stationName, timeArrive, timeDepart } = stop;\n  return (\n    <g>\n      <circle\n        cx={x}\n        cy={y}\n        r={CIRCLE_STATION_RADIUS}\n        fill={CIRCLE_STATION_FILL}\n        stroke={color}\n        strokeWidth={CIRCLE_STATION_STROKE_WIDTH}\n      />\n      <text\n        x={x}\n        y={y + CIRCLE_STATION_RADIUS * 4}\n        fill={TEXT_STATION_STROKE}\n        stroke={null}\n        textAnchor={TEXT_STATION_TEXT_ANCHOR}\n        fontWeight={TEXT_STATION_FONT_WEIGHT}\n      >\n        {stationName}\n      </text>\n      <text\n        x={x}\n        y={y + CIRCLE_STATION_RADIUS * 7}\n        fill={TEXT_STATION_STROKE}\n        stroke={null}\n        textAnchor={TEXT_STATION_TEXT_ANCHOR}\n      >\n        <TimeView t={timeArrive} />\n      </text>\n      <text\n        x={x}\n        y={y + CIRCLE_STATION_RADIUS * 10}\n        fill={TEXT_STATION_STROKE}\n        stroke={null}\n        textAnchor={TEXT_STATION_TEXT_ANCHOR}\n      >\n        <TimeView t={timeDepart} />\n      </text>\n    </g>\n  );\n}\n\nexport default function StopListView({ trainNo, stopList }) {\n  const nStops = stopList.length;\n  if (nStops < 4) {\n    return \"-\";\n  }\n\n  const [x, y] = [SVG_HEIGHT / 2, PADDING_WIDTH];\n  const keyPrefix = trainNo;\n\n  const [stationLastDepart, stationNextArrive] =\n    SearchEngine.getCurrentStops(stopList);\n  if (!stationLastDepart || !stationLastDepart) {\n    return \"-\";\n  }\n\n  const timeCurrent = getTimeCurrent();\n  const dTime = stationNextArrive.timeDepart - timeCurrent;\n  let color;\n  if (dTime < 0) {\n    color = \"gray\";\n  } else if (dTime < 120) {\n    color = \"red\";\n  } else if (dTime < 600) {\n    color = \"orange\";\n  } else {\n    color = \"green\";\n  }\n\n  let dTrain = 0;\n  if (timeCurrent < stationNextArrive.timeArrive) {\n    dTrain =\n      (stationNextArrive.timeArrive - timeCurrent) /\n      (stationNextArrive.timeArrive - stationLastDepart.timeDepart);\n  } else if (timeCurrent > stationNextArrive.timeDepart) {\n    dTrain =\n      -(timeCurrent - stationNextArrive.timeDepart) /\n      (stationNextArrive.timeArrive - stationLastDepart.timeDepart);\n  }\n\n  const xTrain = x + STATION_WIDTH_GAP * (2 - dTrain);\n\n  return (\n    <svg height={SVG_HEIGHT} width={SVG_WIDTH} color={color}>\n      <Dotted x={x} y={y} width={STATION_WIDTH_GAP} color={color} />\n      <Line\n        x={x + STATION_WIDTH_GAP}\n        y={y}\n        width={STATION_WIDTH_GAP}\n        color={color}\n      />\n      <Dotted\n        x={x + STATION_WIDTH_GAP * 2}\n        y={y}\n        width={STATION_WIDTH_GAP}\n        color={color}\n      />\n\n      <StationView\n        key={`station-${keyPrefix}-0`}\n        x={x}\n        y={y}\n        stop={stopList[0]}\n        color={color}\n      />\n\n      <StationView\n        key={`station-${keyPrefix}-lastDepart`}\n        x={x + STATION_WIDTH_GAP * 1}\n        y={y}\n        stop={stationLastDepart}\n        color={color}\n      />\n      <StationView\n        key={`station-${keyPrefix}-nextArrive`}\n        x={x + STATION_WIDTH_GAP * 2}\n        y={y}\n        stop={stationNextArrive}\n        color={color}\n      />\n\n      <StationView\n        key={`station-${keyPrefix}-l0`}\n        x={x + STATION_WIDTH_GAP * 3}\n        y={y}\n        stop={stopList.slice(-1)[0]}\n        color={color}\n      />\n\n      <TrainView x={xTrain} y={y} />\n    </svg>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default function TrainNameView({ trainNo, name }) {\n  return (\n    <Box>\n      <Typography variant=\"caption\"></Typography>\n      {trainNo}\n      <Typography variant=\"subtitle1\">{name}</Typography>\n    </Box>\n  );\n}\n","import TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport StopListView from \"./StopListView.js\";\n\nimport { getTimeCurrent } from \"../../core/SearchEngine.js\";\nimport TrainNameView from \"../../nonstate/atoms/TrainNameView.js\";\n\nexport default function TrainInfoView({ train }) {\n  const { trainNo, name, stopList, stopNextArrive } = train;\n  const timeCurrent = getTimeCurrent();\n\n  let details;\n  if (stopNextArrive.timeArrive > timeCurrent) {\n    const dTime = stopNextArrive.timeArrive - timeCurrent;\n    details = (\n      <div>\n        {\"Arriving at \"}\n        <div>\n          <strong>{stopNextArrive.stationName}</strong>\n        </div>\n        {\" in \"}\n        {dTime}s\n      </div>\n    );\n  } else if (stopNextArrive.timeDepart > timeCurrent) {\n    const dTime = stopNextArrive.timeDepart - timeCurrent;\n    details = (\n      <div>\n        {\"Departing \"}\n        <div>\n          <strong>{stopNextArrive.stationName}</strong>\n        </div>\n        {\" in \"}\n        {dTime}s\n      </div>\n    );\n  }\n\n  return (\n    <TableRow>\n      <TableCell>\n        <TrainNameView trainNo={trainNo} name={name} />\n      </TableCell>\n      <TableCell>{details}</TableCell>\n      <TableCell>\n        <StopListView trainNo={trainNo} stopList={stopList} />\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { Component } from \"react\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Paper from \"@mui/material/Paper\";\n\nimport SearchEngine from \"../../core/SearchEngine.js\";\nimport TrainInfoView from \"../molecules/TrainInfoView.js\";\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: \"M\",\n      trainInfoList: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { filterText } = this.state;\n    this.interval = setInterval(\n      async function () {\n        const trainList = await SearchEngine.getTrainListExtended(filterText);\n        this.setState({ time: Date.now(), trainList });\n      }.bind(this),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { trainList, time } = this.state;\n    if (!trainList) {\n      return \"Loading...\";\n    }\n\n    const tableKey = `table-${time}`;\n\n    return (\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\" color=\"transparent\">\n          <Toolbar>\n            <Typography variant=\"h6\">🇱🇰 Railways</Typography>\n          </Toolbar>\n        </AppBar>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableBody key={tableKey}>\n              {trainList.map((train) => (\n                <TrainInfoView\n                  key={`train-info-${train.trainNo}`}\n                  train={train}\n                />\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}